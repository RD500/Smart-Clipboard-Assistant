buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}

apply plugin: 'android'

repositories {
    mavenCentral()
    mavenLocal()
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.1.0"

    defaultConfig {
        minSdkVersion 4
        targetSdkVersion 18
    }

    signingConfigs {
        release {
            //https://gist.github.com/gabrielemariotti/6856974#file-build-gradle
            def keystore_file = ''
            def keystore_password = ''
            def key_alias = ''
            def key_alias_password = ''
            def Properties props = new Properties()
            def propFile = new File('local.signing.properties')
            if (propFile.canRead()){
                props.load(new FileInputStream(propFile))

                if (props!=null) {
                    keystore_file = props['STORE_FILE']
                    keystore_password = props['STORE_PASSWORD']
                    key_alias = props['KEY_ALIAS']
                    key_alias_password = props['KEY_PASSWORD']
                    println 'For signing, will use keysote file '+keystore_file+', with alias '+key_alias
                } else {
                    println 'local.signing.properties file has invalid properties structure. I can not use it.'
                }
            } else {
                println 'local.signing.properties file was not found. Using debug signing configuration.'
            }

            //I'll allow to enter the password from console, but the file and key should come from the file
            if (keystore_file == '' || key_alias == '') {
                keystore_file = ''
                key_alias = ''
                keystore_password = ''
                key_alias_password = ''
                println 'local.signing.properties file was not found. Using debug signing configuration.'
            } else if (keystore_password == '' || key_alias_password == '') {
                def con = System.console();
                if (con == null) {
                    //build from inside IDE (no console)
                    keystore_file = ''
                    key_alias = ''
                    keystore_password = ''
                    key_alias_password = ''
                } else {
                    keystore_password = System.console().readLine("\n\$ Enter keystore file password: ")
                    key_alias_password = System.console().readLine("\n\$ Enter key alias password: ")
                }
            }

            if (keystore_password == '') {
                //no password, so I'll use debug signingConfigs details.
                storeFile signingConfigs.debug.storeFile
                storePassword signingConfigs.debug.storePassword
                keyAlias signingConfigs.debug.keyAlias
                keyPassword signingConfigs.debug.keyPassword
            } else {
                storeFile file(keystore_file)
                storePassword keystore_password
                keyAlias key_alias
                keyPassword key_alias_password
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlign true
        }

        beta {
            signingConfig signingConfigs.release
            zipAlign true
        }
    }
}

dependencies {
    compile 'net.evendanan.anysoftkeyboard:api:1.0'
    compile 'com.android.support:support-v4:18.0.0'
    compile 'net.evendanan:frankenrobot:1.1'
    //https://groups.google.com/d/msg/adt-dev/nQobKd2Gl_8/Z5yWAvCh4h4J
    compile fileTree(dir: 'libs', include: 'native_libs.jar')
}
