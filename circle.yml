defaults: &defaults
  docker:
    - image: menny/android_ndk:1.6.1a

  working_directory: /opt/workspace/

  environment:
    CODECOV_TOKEN: 1a4cd171-2784-4f48-8a62-0b7ec31e6d7e
    COV_REPORT_LOCATION: app/build/reports/jacoco/testDebugUnitTestCoverage/testDebugUnitTestCoverage.xml
    TERM: dumb
    _JAVA_OPTIONS: "-Xmx1400m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2"

version: 2
jobs:

  build:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: anysoftkeyboard-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "circle.yml" }}-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - run:
          name: Setup environment
          command: scripts/ci_setup.sh

      - store_artifacts:
          path: /opt/workspace/app/build/outputs/apk/
          destination: apks/

      - save_cache:
          key: anysoftkeyboard-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "circle.yml" }}-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - "~/.gradle/wrapper/dists/gradle-4.0-all/"
            - "~/.gradle/caches/modules-2/"
            - "~/.gradle/caches/4.0/"
            - "~/.gradle/caches/build-cache-1/"
            - "./.gradle/buildOutputCleanup"
            - "./.gradle/4.0/"
            - "~/.m2"
            - "/opt/android-sdk-linux/licenses/"
            - "/opt/workspace/local.properties"

  check:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: anysoftkeyboard-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "circle.yml" }}-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - run:
          name: Run Checks
          command: ./scripts/ci_check.sh

      - store_artifacts:
          path: /opt/workspace/app/build/reports/
          destination: lint_reports/app/

      - store_artifacts:
          path: /opt/workspace/base/build/reports/
          destination: lint_reports/base/

      - store_artifacts:
          path: /opt/workspace/jnidictionaryv1/build/reports/
          destination: lint_reports/jnidictionaryv1/

      - store_artifacts:
          path: /opt/workspace/jnidictionaryv2/build/reports/
          destination: lint_reports/jnidictionaryv2/

      - store_artifacts:
          path: /opt/workspace/nextword/build/reports/
          destination: lint_reports/nextword/

  test:
    <<: *defaults
    parallelism: 3
    steps:
      - checkout

      - restore_cache:
          key: anysoftkeyboard-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "circle.yml" }}-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - run:
          name: Run Tests
          command: |
            export TEST_GROUP_INDEX=${CIRCLE_NODE_INDEX}
            export TEST_GROUPS_COUNT=${CIRCLE_NODE_TOTAL}
            echo "Running test group ${TEST_GROUP_INDEX} out of ${TEST_GROUPS_COUNT}..."
            ./scripts/ci_test.sh
            if [[ -f $COV_REPORT_LOCATION ]]; then
              ./scripts/ci_binaries/codecov.sh -X gcov -X coveragepy -f ${COV_REPORT_LOCATION}
            fi

      - store_artifacts:
          path: app/build/reports/tests/
          destination: tests_reports/

      - store_test_results:
          path: /opt/workspace/app/build/test-results

  deploy:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: anysoftkeyboard-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "circle.yml" }}-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - run:
          name: Deploy to Play Store
          command: |
            ./scripts/ci_deploy.sh ${KEYSTORE_FILE_URL} ${PUBLISH_CERT_FILE_URL} ${CIRCLE_PROJECT_USERNAME} ${CIRCLE_BRANCH}

      - store_artifacts:
          path: /opt/workspace/app/build/outputs/apk/
          destination: apks/

      - store_artifacts:
          path: /opt/workspace/app/build/outputs/mapping/
          destination: mapping/

workflows:
  version: 2

  build_check_tests_deploy:
    jobs:
      - build
      - check:
          requires:
            - build
      - test:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - test
            - check
