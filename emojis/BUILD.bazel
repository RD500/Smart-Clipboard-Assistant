load("@contrib_rules_jvm//java:defs.bzl", "JUNIT5_DEPS", "java_junit5_test")

java_library(
    name = "emoji_utils",
    srcs = [
        "utils/JavaEmojiUtils.java",
    ],
)

java_library(
    name = "emoji_generator_lib",
    srcs = [
        "EmojiCollection.java",
        "EmojiCollector.java",
        "EmojiData.java",
        "EmojiKeyboardCreator.java",
        "EmojiKeyboardsExtractor.java",
        "UnicodeOrgEmojiTestDataParser.java",
        "VariantDetector.java",
    ],
    visibility = ["//emojis/tests:__subpackages__"],
    deps = [":emoji_utils"],
)

# Data get be taken from https://unicode.org/Public/emoji/latest/emoji-test.txt
# Usually will run this with:
# bazel run //emojis:emoji_generator -- "$PWD/emojis/data/emoji-test.txt" "$PWD/ime/app/src/main/res/xml-v35"
java_binary(
    name = "emoji_generator",
    srcs = ["EmojiLayoutsGenerator.java"],
    main_class = "emojis.EmojiLayoutsGenerator",
    deps = [":emoji_generator_lib"],
)

java_junit5_test(
    name = "parser_tests",
    srcs = ["UnicodeOrgEmojiTestDataParserTest.java"],
    test_class = "emojis.UnicodeOrgEmojiTestDataParserTest",
    deps = [
        ":emoji_utils",
        "//emojis:emoji_generator_lib",
        "@maven//:org_junit_jupiter_junit_jupiter_api",
    ] + JUNIT5_DEPS,
)

java_junit5_test(
    name = "variant_detector_tests",
    srcs = ["VariantDetectorTest.java"],
    test_class = "emojis.VariantDetectorTest",
    deps = [
        "//emojis:emoji_generator_lib",
        "@maven//:org_junit_jupiter_junit_jupiter_api",
    ] + JUNIT5_DEPS,
)
